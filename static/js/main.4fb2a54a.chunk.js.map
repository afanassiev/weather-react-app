{"version":3,"sources":["Components/Header.js","utils/constants.js","Components/DateInfo.js","Components/CurrentWeather.js","Components/Icon.js","Components/ForecastWeatherItem.js","Components/ForecastWeather.js","Components/CardLayout.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","iconStyles","flex","Header","classes","AppBar","position","Toolbar","className","apiKey","DateInfo","props","day","date","weekDay","Date","weekDayName","getDay","hours","getHours","minutes","getMinutes","Typography","root","minWidth","textAlign","bullet","display","margin","transform","title","fontSize","pos","marginBottom","CurrentWeather","Card","CardContent","variant","component","data","city","Math","round","temp","color","description","CardActions","Button","size","type","onClick","onForecastWeather","Icon","icon","code","animate","theme","flexInfo","flexDirection","paddingLeft","listItem","ForecastWeatherItem","ListItem","alignItems","weather","dt","ListItemText","main","feels_like","humidity","modal","justifyContent","overflow","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","width","maxWidth","inline","ForecastWeather","useState","forecastData","setForecastData","loaded","setLoaded","name","Modal","aria-labelledby","aria-describedby","open","isOpen","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","id","List","list","Divider","api","axios","get","then","response","CardLayout","defaultCity","ready","setWeather","isWeatherPopupOpen","setIsWeatherPopupOpen","setWeatherData","pressure","wind","speed","apiConfig","getApiData","flexGrow","paddingTop","paddingRight","text","secondary","App","Grid","container","direction","justify","align-items","item","xs","sm","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4fb2a54a.chunk.js","sourcesContent":["import React from \"react\";\nimport {AppBar, Toolbar, Typography} from \"@material-ui/core\";\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\nimport CloudIcon from '@material-ui/icons/Cloud';\nimport AcUnitIcon from '@material-ui/icons/AcUnit';\nimport {makeStyles} from \"@material-ui/styles\";\n\nconst useStyles = makeStyles(() => ({\n iconStyles: {\n    flex: 1\n }\n}))\n\nfunction Header() {\n  const classes = useStyles();\n  return (\n    <AppBar position=\"sticky\">\n      <Toolbar>\n        <CloudIcon className={classes.iconStyles}/>\n        <WbSunnyIcon  className={classes.iconStyles}/>\n        <AcUnitIcon className={classes.iconStyles}/>\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default Header;","export const apiKey = \"acd0a1549e872fb0767ad30ae2d97d2e\";\n\n// old bc4cbaea8d259d5eae77dd5c06611baa\n// new acd0a1549e872fb0767ad30ae2d97d2e\n// newest ca893b2d40faa9386e1bd5a324964648","import React, {Component} from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {ListItem} from \"@material-ui/core\";\n\nexport default function DateInfo(props) {\n  let days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\"\n  ];\n  // let day = days[props.date.getDay()];\n\n  let day = props.date;\n  let weekDay = new Date(day * 1000)\n  let weekDayName = days[weekDay.getDay()]\n\n\n  let hours = weekDay.getHours();\n  if (hours < 10) {\n    hours = `0${hours}`;\n  }\n  let minutes = weekDay.getMinutes();\n  if (minutes < 10) {\n    minutes = `0${minutes}`;\n  }\n\n    return (\n      <div>\n        <Typography>\n          {weekDayName}, {hours}:{minutes}\n        </Typography>\n      </div>\n    );\n}","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Button from \"@material-ui/core/Button\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Date from \"./DateInfo\";\nimport {ListItem} from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    textAlign: 'center',\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function CurrentWeather(props) {\n  const classes = useStyles();\n  const bull = <span className={classes.bullet}>â€¢</span>;\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        {/*<Typography className={classes.title} color=\"textSecondary\" gutterBottom>*/}\n        {/*  Date*/}\n        {/*</Typography>*/}\n        <Typography variant=\"h5\" component=\"h2\">\n          {props.data.city}\n        </Typography>\n        {/*<Date*/}\n        {/*  date={props.data.date}*/}\n        {/*/>*/}\n        <Typography variant=\"h4\" component=\"h4\">\n          {Math.round(props.data.temp)} Â°C\n          <Typography className={classes.pos} color=\"textSecondary\">\n            {props.data.description}\n          </Typography>\n          <br />\n\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button\n          size=\"large\"\n          type=\"button\"\n          onClick={props.onForecastWeather}\n        >Press to View Forecast</Button>\n      </CardActions>\n    </Card>\n  )\n}","import React from \"react\";\nimport ReactAnimatedWeather from \"react-animated-weather\";\n\nexport default function Icon(props) {\n  const propTypes = {\n    \"01d\": \"CLEAR_DAY\",\n    \"01n\": \"CLEAR_NIGHT\",\n    \"02d\": \"PARTLY_CLOUDY_DAY\",\n    \"02n\": \"PARTLY_CLOUDY_NIGHT\",\n    \"03d\": \"PARTLY_CLOUDY_DAY\",\n    \"03n\": \"PARTLY_CLOUDY_NIGHT\",\n    \"04d\": \"CLOUDY\",\n    \"04n\": \"CLOUDY\",\n    \"09d\": \"RAIN\",\n    \"09n\": \"RAIN\",\n    \"10d\": \"RAIN\",\n    \"10n\": \"RAIN\",\n    \"11d\": \"RAIN\",\n    \"11n\": \"RAIN\",\n    \"13d\": \"SNOW\",\n    \"13n\": \"SNOW\",\n    \"50d\": \"FOG\",\n    \"50n\": \"FOG\",\n  };\n  return (\n    <ReactAnimatedWeather\n      icon={propTypes[props.code]}\n      color=\"#68b0ab\"\n      size={52}\n      animate={true}\n    />\n  );\n}","import React from \"react\";\nimport Icon from \"./Icon\";\nimport {ListItem, ListItemText, Typography} from \"@material-ui/core\";\nimport DateInfo from \"./DateInfo\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  flexInfo: {\n    flexDirection: \"row\",\n    paddingLeft: '10px'\n  },\n    listItem: {\n      fontSize: 3\n    }\n}\n));\n\nexport default function ForecastWeatherItem(props) {\n  const classes = useStyles();\n  return (\n    <ListItem alignItems=\"flex-start\">\n        <Icon\n          code={props.data.weather[0].icon}\n          />\n          <div className={classes.flexInfo}>\n            <DateInfo\n              date={props.data.dt}\n            />\n            <ListItemText className={classes.listItem}>\n              {Math.round(props.data.main.temp)}Â°C, feels like {Math.round(props.data.main.feels_like)}Â°C\n            </ListItemText>\n            {/*<ListItemText className={classes.listItem}>*/}\n            {/*  Pressure: {props.data.main.pressure}*/}\n            {/*</ListItemText>*/}\n            <ListItemText className={classes.listItem}>\n              Humidity: {props.data.main.humidity}%\n            </ListItemText>\n          </div>\n    </ListItem>\n  )\n}","import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport ForecastWeatherItem from \"./ForecastWeatherItem\";\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport {apiKey} from \"../utils/constants\";\nimport axios from \"axios\";\n\nconst useStyles = makeStyles((theme) => ({\n modal: {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  // width: '100%',\n  //  maxHeight: '70px',\n  //  position: 'fixed',\n   overflow: 'scroll'\n },\n paper: {\n  backgroundColor: theme.palette.background.paper,\n  border: '2px solid #000',\n  boxShadow: theme.shadows[5],\n  padding: theme.spacing(2, 4, 3),\n },\n root: {\n  width: '100%',\n  maxWidth: '36ch',\n  backgroundColor: theme.palette.background.paper,\n },\n inline: {\n  display: 'inline',\n },\n color: {\n  color: \"#673ab7\"\n }\n}));\n\nexport default function ForecastWeather(props) {\n const classes = useStyles();\n const [forecastData, setForecastData] = useState(false);\n const [loaded, setLoaded] = useState(false);\n\n function getApiForecast(response) {\n  setForecastData(response.data);\n  setLoaded(true);\n }\n\n if (loaded && props.city === forecastData.city.name) {\n return (\n   <div>\n    <Modal\n      aria-labelledby=\"transition-modal-title\"\n      aria-describedby=\"transition-modal-description\"\n      className={classes.modal}\n      open={props.isOpen}\n      onClose={props.onClose}\n      closeAfterTransition\n      BackdropComponent={Backdrop}\n      BackdropProps={{\n       timeout: 500,\n      }}\n    >\n     <Fade in={props.isOpen}>\n      <div className={classes.paper}>\n       <h2 id=\"transition-modal-title\">Forecast for {props.city}</h2>\n       <List className={classes.root}>\n         <ForecastWeatherItem data={forecastData.list[0]}/>\n         <Divider variant=\"inset\" component=\"li\" />\n         <ForecastWeatherItem data={forecastData.list[1]}/>\n         <Divider variant=\"inset\" component=\"li\" />\n         <ForecastWeatherItem data={forecastData.list[2]}/>\n         <Divider variant=\"inset\" component=\"li\" />\n         <ForecastWeatherItem data={forecastData.list[3]}/>\n         <Divider variant=\"inset\" component=\"li\" />\n         <ForecastWeatherItem data={forecastData.list[4]}/>\n       </List>\n      </div>\n     </Fade>\n    </Modal>\n    </div>\n );\n } else {\n  let api = `https://api.openweathermap.org/data/2.5/forecast?q=${props.city}&appid=${apiKey}&units=metric`;\n  axios.get(api).then(getApiForecast);\n  return null;\n }\n}","import React, {useEffect, useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport {apiKey} from \"../utils/constants\";\nimport axios from \"axios\";\nimport CurrentWeather from \"./CurrentWeather\";\nimport ForecastWeather from \"./ForecastWeather\";\n\n\n\nexport default function CardLayout(props) {\n  const [city, setCity] = useState(props.defaultCity);\n  const [weather, setWeather] = useState({ready: false});\n  const [isWeatherPopupOpen, setIsWeatherPopupOpen] = useState(false);\n\n  function setWeatherData(response) {\n    setWeather({\n      ready: true,\n      name: response.data.name,\n      description: response.data.weather[0].description,\n      temp: response.data.main.temp,\n      humidity: response.data.main.humidity,\n      pressure: response.data.main.pressure,\n      wind: response.data.wind.speed,\n      icon: response.data.weather[0].icon,\n      city: response.data.name,\n      feels_like: response.data.main.feels_like,\n      date: new Date(response.data.dt * 1000)\n    })\n  }\n\n  function getApiData() {\n    const apiConfig = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`\n    axios.get(apiConfig).then(setWeatherData);\n  }\n\n  function openForecastWeather() {\n    setIsWeatherPopupOpen(true);\n  }\n\n  function closeForecastWeather() {\n    setIsWeatherPopupOpen(false);\n  }\n\n  if (weather.ready) {\n    return (\n      <>\n        <CurrentWeather\n          data={weather}\n          onForecastWeather={openForecastWeather}\n        />\n        <ForecastWeather\n          data={weather}\n          isOpen={isWeatherPopupOpen}\n          onClose={closeForecastWeather}\n          city={weather.city}\n        />\n      </>\n    );\n  } else {\n    getApiData();\n    return \"Please wait\"\n  }\n}","import React, {useState, useEffect} from \"react\";\nimport {Grid} from \"@material-ui/core\";\nimport Header from \"./Components/Header\";\nimport {apiKey, cityList} from \"./utils/constants\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport CardLayout from \"./Components/CardLayout\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    paddingTop: 10,\n    paddingLeft: 20,\n    paddingRight: 20\n  },\n  city: {\n    padding: theme.spacing(2),\n    color: theme.palette.text.secondary,\n  },\n}));\n\n\n\nfunction App() {\n\n  const classes = useStyles();\n\n    return (\n      <Grid\n          container\n          direction=\"column\"\n          justify=\"center\"\n          align-items=\"stretch\"\n        >\n          <Grid item>\n            <Header/>\n          </Grid>\n        <div className={classes.root}>\n          <Grid\n            container\n            spacing={3}\n          >\n            <Grid item xs={12} sm={3}>\n              <CardLayout\n                className={classes.city}\n                defaultCity=\"Paris\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={3}>\n              <CardLayout\n                className={classes.city}\n                defaultCity=\"Seattle\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={3}>\n              <CardLayout\n                className={classes.city}\n                defaultCity=\"Tokyo\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={3}>\n              <CardLayout\n                className={classes.city}\n                defaultCity=\"Verkhoyansk\"\n              />\n            </Grid>\n          </Grid>\n        </div>\n      </Grid>\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'fontsource-roboto';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}